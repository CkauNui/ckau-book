<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="260.14798mm"
   height="46.133461mm"
   viewBox="0 0 260.14798 46.133461"
   version="1.1"
   id="svg5"
   xml:space="preserve"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="darkforce.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="1.0759173"
     inkscape:cx="478.1966"
     inkscape:cy="19.053509"
     inkscape:window-width="3440"
     inkscape:window-height="1369"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" /><defs
     id="defs2"><linearGradient
       inkscape:collect="always"
       id="linearGradient4531"><stop
         style="stop-color:#fbfbfb;stop-opacity:0.30123457;"
         offset="0.30520645"
         id="stop4527" /><stop
         style="stop-color:#f2f2f2;stop-opacity:0.60246915;"
         offset="1"
         id="stop4529" /></linearGradient><linearGradient
       id="linearGradient997"><stop
         style="stop-color:#969696;stop-opacity:0.0617284;"
         offset="0"
         id="stop1021" /><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0.27648112"
         id="stop1023" /><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0.62477559"
         id="stop1025" /><stop
         style="stop-color:#e9e9e9;stop-opacity:0.46172839;"
         offset="1"
         id="stop1027" /></linearGradient><radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4531"
       id="radialGradient4535"
       cx="159.85808"
       cy="208.31439"
       fx="159.85808"
       fy="208.31439"
       r="104.43117"
       gradientTransform="matrix(1,0,0,0.0837951,0,190.85867)"
       gradientUnits="userSpaceOnUse" /></defs><g
     inkscape:label="Warstwa 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-4.1412567,-186.00084)"><path
       style="fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke-width:0.147608"
       d="M 24.122064,231.99706 C 17.902323,231.33357 9.3728404,225.88694 7.9218244,221.6522 c -0.03924,-0.11453 2.9474896,-1.95489 3.1605956,-1.9475 0.06819,0.003 0.416919,0.40772 0.774942,0.90079 0.715531,0.98542 2.925105,3.37552 3.120569,3.37552 0.06765,0 0.729448,-0.74725 1.470659,-1.66058 1.612463,-1.98687 1.410993,-1.89384 2.547191,-1.17626 0.508033,0.32084 1.337891,0.79244 1.844129,1.048 0.506238,0.25554 0.920434,0.49477 0.920434,0.53162 0,0.0368 -0.340456,1.00492 -0.756567,2.15128 -0.638691,1.75955 -0.724933,2.11445 -0.553528,2.27782 0.286785,0.27336 2.451434,0.79079 4.151541,0.99236 l 1.439171,0.17064 v 1.89177 1.89176 l -0.701134,-0.0236 c -0.385628,-0.0129 -0.933617,-0.0485 -1.217763,-0.0787 z m 3.690185,-1.77333 v -1.91062 l 1.672705,-0.23511 c 2.268737,-0.3189 4.086946,-0.82364 4.074365,-1.13109 -0.0053,-0.12934 -0.3281,-1.09866 -0.717352,-2.15406 -0.816352,-2.2134 -0.841461,-2.01491 0.329694,-2.60612 0.500324,-0.25256 1.326531,-0.72246 1.836013,-1.04423 l 0.926328,-0.58504 0.287677,0.34641 c 0.158223,0.19052 0.805097,0.99188 1.437501,1.78078 1.416657,1.76725 1.888441,1.5693 4.388757,-1.84139 0.880568,-1.20119 0.685197,-1.19421 2.54926,-0.091 l 1.5279,0.90428 -0.246844,0.38728 c -3.650752,5.72772 -9.894924,9.4459 -16.774438,9.9886 l -1.291566,0.10188 z m -1.684363,-9.3538 c -0.438653,-0.5213 -0.474566,-0.85786 -0.157055,-1.47185 l 0.225085,-0.43527 -1.156277,-2.02983 -1.156272,-2.02983 -2.537588,-0.0403 c -2.137722,-0.034 -2.537584,-0.006 -2.537584,0.17379 0,0.59597 -1.262753,1.02959 -1.941097,0.66654 -1.146447,-0.61356 -0.496144,-2.65714 0.785508,-2.46847 0.251394,0.037 0.520299,-0.32493 1.541885,-2.07539 1.446722,-2.47891 1.377961,-2.14409 0.678048,-3.30176 -0.307637,-0.50882 -0.850869,-1.43992 -1.207184,-2.0691 -0.522786,-0.92313 -0.715415,-1.14395 -0.997871,-1.14395 -1.361746,0 -1.962766,-1.87536 -0.800386,-2.49745 0.692634,-0.37068 1.941097,0.0943 1.941097,0.72293 0,0.10744 0.809784,0.14492 2.537584,0.11742 l 2.537588,-0.0404 1.156272,-2.02983 1.156277,-2.02982 -0.225085,-0.43527 c -0.69241,-1.33897 0.857335,-2.55266 2.055767,-1.60997 l 0.401766,0.31603 -0.08465,0.75412 c -0.04656,0.41477 -0.09978,0.85591 -0.118273,0.9803 -0.0185,0.1244 0.462169,1.10341 1.068151,2.17559 l 1.101786,1.94941 2.408529,0.002 2.408535,0.002 0.487243,-0.51663 c 0.539567,-0.57211 1.010266,-0.65554 1.696488,-0.30068 1.166603,0.60327 0.602388,2.44098 -0.749431,2.44098 h -0.399088 l -1.191754,2.09259 c -1.386611,2.43472 -1.323542,2.14405 -0.694084,3.19903 0.273715,0.45875 0.806449,1.37362 1.183851,2.03303 l 0.686183,1.19892 0.534801,0.0868 c 0.77513,0.12578 1.230508,0.61123 1.230508,1.31177 0,1.28987 -1.375853,1.75661 -2.297474,0.7794 l -0.487243,-0.51662 -2.408535,0.003 -2.408529,0.003 -1.16857,2.08072 c -0.991601,1.76561 -1.14249,2.12249 -0.996351,2.3565 0.874254,1.39989 -1.043045,2.85609 -2.102576,1.59691 z m 19.360723,-2.09467 c -0.872529,-0.50598 -1.557604,-0.98638 -1.522385,-1.06756 0.03523,-0.0811 0.29802,-0.67899 0.584002,-1.32846 0.476553,-1.08229 1.359493,-4.01907 1.243265,-4.13529 -0.02716,-0.0271 -1.008522,-0.22029 -2.180782,-0.42917 -2.555033,-0.45526 -2.303705,-0.14799 -2.250205,-2.75104 l 0.04417,-2.14921 2.169941,-0.3458 c 1.193466,-0.19018 2.212004,-0.41002 2.263415,-0.48855 0.189647,-0.28961 -0.82803,-3.66455 -1.507925,-5.00077 -0.324514,-0.63778 -0.422804,-0.53158 1.525896,-1.64875 l 1.439907,-0.82548 0.220777,0.33694 c 1.967454,3.00272 2.927523,9.56163 2.066236,14.11595 -0.42974,2.27238 -2.026709,6.65133 -2.421462,6.63974 -0.04864,-0.002 -0.802322,-0.41659 -1.67485,-0.92255 z m -38.9633366,0.44542 c -2.986526,-4.65529 -3.197513,-13.49962 -0.460887,-19.31988 l 0.668835,-1.42249 1.572362,0.89384 c 0.864799,0.49162 1.598663,0.91448 1.63081,0.93971 0.03215,0.0252 -0.212244,0.72808 -0.543088,1.56189 -1.600845,4.03456 -1.582873,4.11058 1.0750696,4.54722 1.136577,0.18672 2.089552,0.35693 2.117723,0.37824 0.05829,0.0441 0.03028,4.38147 -0.02868,4.44043 -0.03109,0.031 -4.1957286,0.78517 -4.3363256,0.78517 -0.280018,0 0.433577,2.60823 1.208167,4.41592 0.292791,0.68329 0.47712,1.29758 0.409621,1.36507 -0.890867,0.89087 -3.056535,1.81559 -3.313605,1.41488 z M 42.024163,197.30186 c -0.888967,-1.13947 -1.771764,-2.10489 -2.634846,-2.8815 l -0.452938,-0.40757 -1.441772,1.78033 -1.441775,1.78031 -0.540809,-0.32846 c -0.297447,-0.18065 -1.038987,-0.6112 -1.647869,-0.95676 -0.608877,-0.34556 -1.224984,-0.71573 -1.36912,-0.82257 l -0.262065,-0.19427 0.766736,-2.10798 c 0.487219,-1.33949 0.715335,-2.15939 0.625736,-2.24899 -0.230577,-0.23058 -2.389212,-0.73215 -3.894292,-0.90488 -0.771251,-0.0885 -1.485301,-0.18415 -1.586783,-0.21254 -0.135044,-0.0378 -0.184509,-0.54751 -0.184509,-1.90135 0,-1.37438 0.04742,-1.8531 0.184509,-1.86284 5.947118,-0.42278 14.94717,4.70859 17.800834,10.1491 l 0.167897,0.3201 -1.290324,0.77378 c -0.709681,0.42558 -1.428728,0.86314 -1.59788,0.97235 l -0.307556,0.19857 z m -32.4783356,0.0913 c -1.75979,-1.04768 -1.726611,-0.94955 -0.776874,-2.29759 3.5949786,-5.1026 9.8492986,-8.62612 15.9850216,-9.00553 l 1.443753,-0.0892 -0.04147,1.9036 -0.04147,1.9036 -1.356183,0.16668 c -1.391513,0.17105 -3.810456,0.71449 -4.170369,0.93692 -0.179894,0.11119 0.40166,2.05771 1.244816,4.16652 0.0775,0.19387 -0.07589,0.33852 -0.687594,0.64837 -0.43305,0.21937 -1.264283,0.68828 -1.847188,1.04204 -1.346262,0.81703 -1.0996,0.91365 -2.691449,-1.05429 -1.674247,-2.0698 -2.244725,-1.86935 -4.736849,1.66448 -0.777383,1.10233 -0.499746,1.1006 -2.3241206,0.0145 z"
       id="path304" /><path
       style="font-size:24.1858px;font-family:'Leelawadee UI';-inkscape-font-specification:'Leelawadee UI';fill:#ffffff;stroke-width:1.14264;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1;paint-order:markers fill stroke"
       d="m 67.177344,201.64204 h -4.889122 v 15.13974 H 60.304231 V 201.64204 H 55.426918 V 199.847 h 11.750426 z m 15.387743,15.13974 h -1.983992 v -7.72339 h -8.762629 v 7.72339 H 69.834475 V 199.847 h 1.983991 v 7.42816 h 8.762629 V 199.847 h 1.983992 z m 13.41556,0 H 87.005448 V 199.847 h 8.597296 v 1.79504 h -6.613305 v 5.63312 h 6.117307 v 1.78323 h -6.117307 v 5.92835 h 6.991208 z m 18.481823,-15.13974 h -6.6133 v 5.8575 h 6.11731 v 1.78323 h -6.11731 v 7.49901 h -1.98399 V 199.847 h 8.59729 z m 10.03805,15.42317 q -3.60189,0 -5.77483,-2.3737 -2.16113,-2.37371 -2.16113,-6.17636 0,-4.08607 2.20837,-6.51883 2.20837,-2.43275 6.01102,-2.43275 3.50741,0 5.64493,2.3619 2.14932,2.36189 2.14932,6.17635 0,4.14513 -2.19656,6.55426 -2.19656,2.40913 -5.88112,2.40913 z m 0.14172,-15.7066 q -2.66894,0 -4.33408,1.92495 -1.66513,1.92494 -1.66513,5.05445 0,3.12951 1.61789,5.04265 1.62971,1.90132 4.2396,1.90132 2.78704,0 4.39313,-1.81866 1.60609,-1.81866 1.60609,-5.08988 0,-3.35389 -1.55885,-5.18436 -1.55885,-1.83047 -4.29865,-1.83047 z m 23.40638,15.42317 h -2.3619 l -2.83427,-4.7474 q -0.38971,-0.66133 -0.75581,-1.1219 -0.36609,-0.47238 -0.7558,-0.76762 -0.37791,-0.29524 -0.82667,-0.42514 -0.43695,-0.14171 -0.99199,-0.14171 h -1.62971 v 7.20377 h -1.98399 V 199.847 h 5.05445 q 1.11009,0 2.04304,0.28343 0.94476,0.27162 1.62971,0.83847 0.69676,0.56685 1.08647,1.41714 0.38971,0.83847 0.38971,1.97218 0,0.88571 -0.27162,1.62971 -0.2598,0.73218 -0.7558,1.31085 -0.48419,0.57866 -1.18095,0.99199 -0.68495,0.40153 -1.54704,0.62591 v 0.0472 q 0.42514,0.18895 0.73219,0.43695 0.31885,0.23619 0.60228,0.56686 0.28343,0.33066 0.55505,0.7558 0.28342,0.41334 0.6259,0.96838 z m -10.15615,-15.13974 v 6.14093 h 2.69256 q 0.744,0 1.3699,-0.22438 0.63771,-0.22438 1.09828,-0.63772 0.46057,-0.42514 0.72038,-1.02742 0.25981,-0.61409 0.25981,-1.3699 0,-1.35809 -0.88571,-2.11389 -0.87391,-0.76762 -2.53904,-0.76762 z m 23.66618,14.43118 q -1.8777,0.99199 -4.67655,0.99199 -3.6137,0 -5.78664,-2.32646 -2.17294,-2.32647 -2.17294,-6.1055 0,-4.06246 2.44456,-6.56607 2.44456,-2.50361 6.19997,-2.50361 2.40913,0 3.9916,0.69676 v 2.1139 q -1.81865,-1.01562 -4.01522,-1.01562 -2.91694,0 -4.7356,1.94857 -1.80684,1.94856 -1.80684,5.20797 0,3.09408 1.68875,4.93636 1.70056,1.83047 4.45217,1.83047 2.55085,0 4.41674,-1.13371 z m 12.42357,0.70856 h -8.9752 V 199.847 h 8.5973 v 1.79504 h -6.61331 v 5.63312 h 6.11731 v 1.78323 h -6.11731 v 5.92835 h 6.99121 z m 18.85972,0 h -8.97519 V 199.847 h 8.59729 v 1.79504 h -6.6133 v 5.63312 h 6.1173 v 1.78323 h -6.1173 v 5.92835 h 6.9912 z m 16.91117,0 h -2.43275 l -8.71539,-13.49822 q -0.33067,-0.50781 -0.54324,-1.06286 h -0.0709 q 0.0945,0.54324 0.0945,2.32647 v 12.23461 h -1.98399 V 199.847 h 2.57446 l 8.4792,13.28566 q 0.53143,0.82666 0.68495,1.13371 h 0.0472 q -0.11809,-0.73219 -0.11809,-2.4918 V 199.847 h 1.98399 z m 17.10012,-1.15732 q -2.55085,1.44075 -5.66855,1.44075 -3.62551,0 -5.86931,-2.33827 -2.23199,-2.33828 -2.23199,-6.18817 0,-3.93255 2.47999,-6.44797 2.4918,-2.52723 6.30626,-2.52723 2.76342,0 4.64112,0.89752 v 2.19656 q -2.05484,-1.29904 -4.8655,-1.29904 -2.84608,0 -4.66474,1.96037 -1.81866,1.96038 -1.81866,5.07808 0,3.21217 1.68876,5.05445 1.68875,1.83047 4.58207,1.83047 1.98399,0 3.43656,-0.79123 v -4.74741 h -3.70818 v -1.79504 h 5.69217 z m 5.91654,1.15732 h -1.984 V 199.847 h 1.984 z m 18.10393,0 h -2.43275 l -8.71539,-13.49822 q -0.33067,-0.50781 -0.54324,-1.06286 h -0.0709 q 0.0945,0.54324 0.0945,2.32647 v 12.23461 h -1.98399 V 199.847 h 2.57446 l 8.4792,13.28566 q 0.53143,0.82666 0.68495,1.13371 h 0.0472 q -0.11809,-0.73219 -0.11809,-2.4918 V 199.847 h 1.98399 z m 13.41555,0 h -8.9752 V 199.847 h 8.5973 v 1.79504 h -6.61331 v 5.63312 h 6.11731 v 1.78323 h -6.11731 v 5.92835 h 6.99121 z"
       id="text360"
       aria-label="THE FORCE ENGINE" /></g><script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script></svg>
